#!/bin/bash

# Setup nginx-proxy with Let's Encrypt for multi-domain support

set -e

GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

log_step "Setting up nginx-proxy with Let's Encrypt..."

# Create nginx-proxy directory
mkdir -p ./nginx-proxy

# Create docker-compose for nginx-proxy
cat > ./nginx-proxy/docker-compose.nginx-proxy.yml << 'EOF'
version: '3.8'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
    networks:
      - proxy
    environment:
      - ENABLE_IPV6=true

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    restart: unless-stopped
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_acme:/etc/acme.sh
    networks:
      - proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=${SSL_EMAIL:-admin@localhost}

volumes:
  nginx_certs:
  nginx_vhost:
  nginx_html:
  nginx_acme:

networks:
  proxy:
    external: true
EOF

# Start nginx-proxy
log_step "Starting nginx-proxy..."
cd nginx-proxy
docker-compose -f docker-compose.nginx-proxy.yml up -d
cd ..

log_info "âœ… nginx-proxy started successfully!"
log_info "ðŸ”’ SSL certificates will be automatically generated by Let's Encrypt"
