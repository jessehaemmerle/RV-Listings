version: '3.8'

services:
  mongodb:
    image: mongo:7
    container_name: ${COMPOSE_PROJECT_NAME:-rv-classifieds}-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${DB_NAME:-rv_classifieds}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - internal
      - ${REVERSE_PROXY_NETWORK:-proxy}
    # No external ports - internal access only

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: ${COMPOSE_PROJECT_NAME:-rv-classifieds}-backend
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://rvuser:${DB_PASSWORD:-rvpass123}@mongodb:27017/${DB_NAME:-rv_classifieds}
      - DB_NAME=${DB_NAME:-rv_classifieds}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-change-in-production}
    depends_on:
      - mongodb
    networks:
      - internal
      - ${REVERSE_PROXY_NETWORK:-proxy}
    # Labels for Traefik (if using Traefik)
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${REVERSE_PROXY_NETWORK:-proxy}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME:-rv-classifieds}-api.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME:-rv-classifieds}-api.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME:-rv-classifieds}-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME:-rv-classifieds}-api.loadbalancer.server.port=8000"
      # Labels for nginx-proxy (if using nginx-proxy)
      - "VIRTUAL_HOST=${DOMAIN_NAME}"
      - "VIRTUAL_PATH=/api"
      - "VIRTUAL_PORT=8000"
      - "LETSENCRYPT_HOST=${DOMAIN_NAME}"
      - "LETSENCRYPT_EMAIL=${SSL_EMAIL}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/stats"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.multi
      args:
        - REACT_APP_BACKEND_URL=https://${DOMAIN_NAME}
    container_name: ${COMPOSE_PROJECT_NAME:-rv-classifieds}-frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - ${REVERSE_PROXY_NETWORK:-proxy}
    # Labels for Traefik (if using Traefik)
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${REVERSE_PROXY_NETWORK:-proxy}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME:-rv-classifieds}-web.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME:-rv-classifieds}-web.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME:-rv-classifieds}-web.tls.certresolver=letsencrypt"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME:-rv-classifieds}-web.loadbalancer.server.port=80"
      # Labels for nginx-proxy (if using nginx-proxy)
      - "VIRTUAL_HOST=${DOMAIN_NAME}"
      - "VIRTUAL_PORT=80"
      - "LETSENCRYPT_HOST=${DOMAIN_NAME}"
      - "LETSENCRYPT_EMAIL=${SSL_EMAIL}"

volumes:
  mongodb_data:
    driver: local

networks:
  internal:
    driver: bridge
  # External network for reverse proxy (create with: docker network create proxy)
  proxy:
    external: true
    name: ${REVERSE_PROXY_NETWORK:-proxy}
